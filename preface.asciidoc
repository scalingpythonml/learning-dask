[preface]
== Preface

This book focuses on Dask because of it's comparatively deep integration into the Python ecosystem. Alternatives such as Ray, Spark, and buying really expensive computers exist, and we'll talk a bit more about those in the next chapter.


=== Audience


We wrote this book for Python data engineers and scientists looking to scale or speed-up their Python powered data powered applications. This includes everything from the traditional exchange-transform-load (ETL) to the new fancy machine-learning (aka three statisicians in a trench-coat) tools.


This book is not for people who love setting up machines, fine-tuning memory allocations, micro-optimizations, or people looking to build distributed systems from scratch. We'll the basics of these topics that a practioner need to understand, but not at the level of systems implementor.



This book assumes you know enough Python, and the libraries you are using (be it pandas, numpy, sci-kit learn or similar), to complete your work on a smaller scale, but not necessarily how to handle larger data sizes or bigger expirements. If you don't

=== Supporting Books


If you're coming from a language other than Python, or otherwise new to Python Learning Python and Head First Python from O'Reilly are really solid introductions.


If your Python solid, but your data analysis experience could use some reinforcement (see joke) Python for Data Analysis, 2nd Edition, by Wes McKinney (O’Reilly), Data Science from Scratch, 2nd Edition, by Joel Grus (O’Reilly), and Machine Learning with Python Cookbook by Chris Albon (O’Reilly) are all excellent resources to dig deeper.


Dask is not the only option for you. If as your going through the first chapter you find one of the alternative frameworks mentioned to be a better fit we have some suggestions for books on those topics. Suggestions which we might financially benefit from, but I assure you book royalties are pretty low. If you decide PySpark is better suited to what your working on "Learning Spark" (the latest edition) is a great jumping off point for the Spark ecosystem. If you decide that Ray is better suited to your needs, we'd recommend the soon-to-be-started "Learning Ray" book from or "Serverless Python with Ray" (both from O'Reilly).



Also if you're interested in teaching your kid about the area that you're working on, I am working on a book targetted to children introducing distributed programming with Spark called "Distributed Computing 4 Kids."


=== Layout

This introductory book is meant to get up you up to speed with the basics of dask in the first three chapters. After you've completed "Understanding the basics of Dask" the rest of the book is a choose-your-own-adventure type novel where the if you go down the wrong path you get a stack-trace you don't undeerstand.
